name: Gradle Merge Reports Action
description: A GitHub Action to merge test reports with a pre-existing gradle function

inputs:
  java-version:
    description: "Java version to use"
    required: false
    default: "21"
  java-distribution:
    description: "Java distribution to use"
    required: false
    default: "temurin"
  commands:
    description: "The gradle commands to run"
    required: false
    default: "jacocoMergeReports"
  xml-location:
    description: "Location of Jacoco XML report"
    required: false
    default: "./build/reports/jacoco/jacocoMergeReports/jacocoMergeReports.xml"
  csv-location:
    description: "Location of Jacoco CSV report"
    required: false
    default: "./build/reports/jacoco/jacocoMergeReports/jacocoMergeReports.csv"
  test-artifact-1:
    description: "First test artifact to download"
    required: false
    default: "gradle-tests-unit"
  test-artifact-2:
    description: "Second test artifact to download"
    required: false
    default: "gradle-tests-integration"
outputs:
  total-lines:
    description: "Total lines to cover with tests"
    value: ${{ steps.build-and-test.outputs.total-lines }}
  lines-covered:
    description: "Total lines to covered with tests"
    value: ${{ steps.build-and-test.outputs.lines-covered }}
  coverage-percentage:
    description: "The coverage percentage"
    value: ${{ steps.build-and-test.outputs.coverage-percentage }}

runs:
  using: composite
  steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: gradle-build

    - name: Download first test artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.test-artifact-1 }}
        path: build/jacoco

    - name: Download second test artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.test-artifact-2 }}
        path: build/jacoco

    - name: "Check build/jacoco"
      shell: bash
      run: |
        ls -la build/jacoco

    - name: "Setup Java"
      uses: actions/setup-java@v4
      with:
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}

    - name: "Merge test reports"
      id: test
      shell: bash
      run: |
        ./gradlew --build-cache ${{ inputs.commands }}

    - name: "Report coverage"
      id: report-coverage
      shell: bash
      run: |
        if [ -f ${{ inputs.csv-location }} ]; then
          awk -F "," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' ${{ inputs.csv-location }}
          echo "total-lines=$(awk -F "," '{ instructions += $4 + $5 } END { print instructions }' ${{ inputs.csv-location }})" >> "$GITHUB_OUTPUT"
          echo "lines-covered=$(awk -F "," '{ covered += $5 } END { print covered }' ${{ inputs.csv-location }})" >> "$GITHUB_OUTPUT"
          echo "coverage-percentage=$(awk -F "," '{ instructions += $4 + $5; covered += $5 } END { print 100*covered/instructions }' ${{ inputs.csv-location }})" >> "$GITHUB_OUTPUT"
        else
          echo -e "\e[33mJacoco CSV coverage report not found!\e[0m"
        fi

    - name: "JaCoCo Coverage Summary Report"
      uses: PavanMudigonda/jacoco-reporter@v5.0
      with:
        coverage_results_path: ${{ inputs.xml-location }}
        coverage_report_name: Coverage Summary
        coverage_report_title: JaCoCo Combined Coverage Report
        github_token: ${{ github.token }}
        skip_check_run: true
        publish_only_summary: false
